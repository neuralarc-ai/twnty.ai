name: Boost Blog Engagement

on:
  schedule:
    # Runs every hour at minute 0
    - cron: '0 * * * *'
  workflow_dispatch: # Allows manual triggering from Actions tab

jobs:
  boost-engagement:
    runs-on: ubuntu-latest
    steps:
      - name: Verify Secrets
        run: |
          if [ -z "${{ secrets.CRON_SECRET }}" ]; then
            echo "Error: CRON_SECRET is not set"
            exit 1
          fi
          if [ -z "${{ secrets.VERCEL_DOMAIN }}" ]; then
            echo "Error: VERCEL_DOMAIN is not set"
            exit 1
          fi
          echo "‚úì Secrets verified"

      - name: Call Engagement Boost API
        run: |
          set -e  # Exit on any error
          
          DOMAIN="${{ secrets.VERCEL_DOMAIN }}"
          SECRET="${{ secrets.CRON_SECRET }}"
          BYPASS_TOKEN="${{ secrets.VERCEL_BYPASS_TOKEN }}"
          
          echo "üì° Calling API endpoint..."
          echo "Domain: $DOMAIN"
          
          # Build URL with bypass token if available
          if [ -n "$BYPASS_TOKEN" ]; then
            URL="https://$DOMAIN/api/cron/boost-engagement?x-vercel-protection-bypass=$BYPASS_TOKEN"
            echo "Using bypass token for deployment protection"
          else
            URL="https://$DOMAIN/api/cron/boost-engagement"
            echo "Note: Bypass token not set - may fail if deployment protection is enabled"
          fi
          
          echo "URL: $URL"
          
          # Make the API call and capture both response and status code
          HTTP_CODE=$(curl -s -o response_body.txt -w "%{http_code}" \
            -X GET \
            -H "Authorization: Bearer $SECRET" \
            "$URL")
          
          echo ""
          echo "--- Response ---"
          echo "HTTP Status Code: $HTTP_CODE"
          echo "Response Body:"
          cat response_body.txt
          echo "---"
          echo ""
          
          # Check if curl was successful
          if [ $? -ne 0 ]; then
            echo "‚ùå Error: curl command failed"
            exit 1
          fi
          
          # Check HTTP status code
          if [ "$HTTP_CODE" = "200" ]; then
            echo "‚úÖ Success! API call completed successfully."
          else
            echo "‚ùå Error: API returned HTTP $HTTP_CODE"
            exit 1
          fi
        env:
          CRON_SECRET: ${{ secrets.CRON_SECRET }}
          VERCEL_DOMAIN: ${{ secrets.VERCEL_DOMAIN }}
          VERCEL_BYPASS_TOKEN: ${{ secrets.VERCEL_BYPASS_TOKEN }}

